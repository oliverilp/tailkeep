services:
  traefik:
    image: traefik:3.1
    container_name: tailkeep-traefik
    security_opt:
      - no-new-privileges:true
    ports:
      # WWW
      - 80:80
      - 443:443
      # The Web UI (enabled by --api.insecure=true)
      - 8080:8080
    environment:
      - CF_DNS_API_TOKEN_FILE=/run/secrets/cf_api_token
      - TRAEFIK_DASHBOARD_CREDENTIALS=${TRAEFIK_DASHBOARD_CREDENTIALS}
    secrets:
      - cf_api_token
    env_file: .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json:ro
      - ./traefik/config.yml:/config.yml:ro
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.entrypoints=http'
      - 'traefik.http.routers.traefik.rule=Host(`traefik-dashboard.demo.tailkeep.org`)'
      - 'traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}'
      - 'traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https'
      - 'traefik.http.routers.traefik.middlewares=traefik-https-redirect'
      - 'traefik.http.routers.traefik-secure.entrypoints=https'
      - 'traefik.http.routers.traefik-secure.rule=Host(`traefik-dashboard.demo.tailkeep.org`)'
      - 'traefik.http.routers.traefik-secure.middlewares=traefik-auth'
      - 'traefik.http.routers.traefik-secure.tls=true'
      - 'traefik.http.routers.traefik-secure.tls.certresolver=cloudflare'
      - 'traefik.http.routers.traefik-secure.tls.domains[0].main=demo.tailkeep.org'
      - 'traefik.http.routers.traefik-secure.tls.domains[0].sans=*.demo.tailkeep.org'
      - 'traefik.http.routers.traefik-secure.service=api@internal'
    restart: unless-stopped
  server:
    container_name: tailkeep-server
    image: tailkeep:latest
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PORT=${REDIS_PORT}
      - VIDEOS_PATH=${VIDEOS_PATH}
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_PORT=${NGINX_PORT}
      - DEMO_MODE=${DEMO_MODE}
    ports:
      - '3000:3000'
    volumes:
      - ./videos:/videos:ro
    depends_on:
      - nginx
      - db
      - redis
    restart: unless-stopped
  worker:
    container_name: tailkeep-worker
    image: tailkeep-worker:latest
    environment:
      - REDIS_URL=${REDIS_URL}
      - REDIS_PORT=${REDIS_PORT}
      - VIDEOS_PATH=${VIDEOS_PATH}
    volumes:
      - ./videos:/videos:ro
    depends_on:
      - nginx
      - db
      - redis
    restart: unless-stopped
  nginx:
    container_name: tailkeep-nginx
    image: nginx
    volumes:
      - ./videos:/var/www/media:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
  db:
    container_name: tailkeep-postgres
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: tailkeep
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
  redis:
    image: redis
    container_name: tailkeep-redis
    volumes:
      - ./redis_data:/data
    entrypoint: redis-server --appendonly yes
    restart: unless-stopped

networks:
  tailkeep:
    name: tailkeep
    driver: bridge

secrets:
  cf_api_token:
    file: ./traefik/cf_api_token.txt
